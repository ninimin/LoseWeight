<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/storage.proto

namespace Google\Cloud\Dlp\V2\CloudStorageOptions;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Set of files to scan.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.CloudStorageOptions.FileSet</code>
 */
class FileSet extends \Google\Protobuf\Internal\Message
{
    /**
     * The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in the
     * path is allowed.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     */
    private $url = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $url
     *           The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in the
     *           path is allowed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     * The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in the
     * path is allowed.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in the
     * path is allowed.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FileSet::class, \Google\Cloud\Dlp\V2\CloudStorageOptions_FileSet::class);

